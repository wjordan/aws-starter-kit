AWSTemplateFormatVersion: 2010-09-09
Description: Continuous Deployment setup using CodePipeline and CloudFormation.
Parameters:
  ArtifactBucket:
    Type: String
    Default: aws-codepipeline
    Description: Name of existing S3 bucket for storing pipeline artifacts
  StackFileName:
    Type: String
    Default: cfn-template.yml
    Description: CloudFormation stack template filename in the Git repo
  GitHubOwner:
    Type: String
    Default: wjordan
    Description: GitHub repository owner
  GitHubRepo:
    Type: String
    Default: aws-starter-kit
    Description: GitHub repository name
  GitHubBranch:
    Type: String
    Default: master
    Description: GitHub repository branch
  GitHubToken:
    Type: String
    Description: GitHub repository OAuth token
Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: Pipeline
      RoleArn: !GetAtt [PipelineRole, Arn]
      ArtifactStore: 
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: 1
            Provider: GitHub
          Configuration:
            Owner: !Ref GitHubOwner
            Repo: !Ref GitHubRepo
            Branch: !Ref GitHubBranch
            OAuthToken: !Ref GitHubToken
          OutputArtifacts: [Name: Template]
        # - Name: Secrets
        #   ActionTypeId:
        #     Category: Source
        #     Owner: AWS
        #     Version: 1
        #     Provider: S3
        #   Configuration:
        #     S3Bucket: !Ref SecretsBucket
        #     S3ObjectKey: !Ref SecretsKey
        #   OutputArtifacts: [Name: Secrets]
      - Name: Deploy
        Actions:
        - Name: Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CloudFormation
          InputArtifacts:
          - Name: Template
          # - Name: Secrets
          Configuration:
            ActionMode: REPLACE_ON_FAILURE
            RoleArn: !GetAtt [CFNRole, Arn]
            StackName: !Ref AWS::StackName
            TemplatePath: !Sub "Template::${StackFileName}"
            Capabilities: CAPABILITY_IAM
            ParameterOverrides: !Sub |
              {
                "ArtifactBucket": "${ArtifactBucket}"
                "StackFileName": "${StackFileName}"
                "GitHubOwner": "${GitHubOwner}"
                "GitHubRepo": "${GitHubRepo}"
                "GitHubBranch": "${GitHubBranch}"
                "GitHubToken": "${GitHubToken}"
              }
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal: {Service: [cloudformation.amazonaws.com]}
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyName: CloudFormationRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action:
                - 'cloudformation:*'
                - 'iam:*'
              Effect: Allow
              Resource: '*'
              
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal: {Service: [codepipeline.amazonaws.com]}
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:*'
                - 'iam:PassRole'
                Effect: Allow
                Resource: '*'
